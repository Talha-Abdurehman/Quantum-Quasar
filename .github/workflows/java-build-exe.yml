name: Build and Upload EXE

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package

    - name: Create EXE
      run: |
        if [ -f "myapp.xml" ]; then
          chmod +x launch4j/launch4j
          ./launch4j/launch4j myapp.xml
        else
          echo "myapp.xml does not exist."
          exit 1
        fi

    # - name: Upload Release Asset
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     tag: ${{ github.ref }}
    #     files: /home/runner/work/Quantum-Quasar/Quantum-Quasar/myapp.exe  # Path to your generated EXE file
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload EXE artifact
      uses: actions/upload-artifact@v4
      with:
        name: myapp-executable
        path: /home/runner/work/Quantum-Quasar/Quantum-Quasar/myapp.exe  # Ensure this path is correct based on previous checks

  download:
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after the build job

    steps:
    - name: Download EXE artifact
      uses: actions/download-artifact@v4
      with:
        name: myapp-executable

    - name: List downloaded files
      run: ls -l  # Check what files were downloaded








#----------------------------------

# name: Build Java EXE

# on:
#   push:
#     branches:
#       - master
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3  # Using updated version

#     - name: Set up JDK
#       uses: actions/setup-java@v3  # Already using v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'

#     - name: Build with Maven
#       run: mvn clean package

#     - name: List Target Directory
#       run: ls -l target  # Check for generated JAR files

#     - name: Download Launch4j
#       run: |
#         wget https://sourceforge.net/projects/launch4j/files/launch4j-3/3.14/launch4j-3.14-linux-x64.tgz/download -O launch4j-linux.tgz
#         tar -xzf launch4j-linux.tgz
#         ls -l  # List contents of current directory for debugging

#     - name: Create EXE
#       run: |
#         if [ -f "myapp.xml" ]; then
#           chmod +x launch4j/launch4j
#           ./launch4j/launch4j myapp.xml  # Adjust path to your config file
#         else
#           echo "myapp.xml does not exist."
#           exit 1
#         fi

#     - name: List Launch4j Directory
#       run: ls -l launch4j  # Check if myapp.exe was created

#     - name: Upload EXE artifact
#       uses: actions/upload-artifact@v4
#       with:
#         name: myapp-executable
#         path: /home/runner/work/Quantum-Quasar/Quantum-Quasar/myapp.exe  # Update this path based on previous checks or keep it as ./launch4j/your-output.exe if not changing output name.
