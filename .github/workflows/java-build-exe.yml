name: Build and Package Java Application
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Download and Setup Launch4j
      shell: pwsh
      run: |
        Write-Host "Creating temporary directory..."
        New-Item -ItemType Directory -Force -Path ".\temp" | Out-Null
        
        Write-Host "Downloading Launch4j..."
        $url = "https://sourceforge.net/projects/launch4j/files/launch4j-3/3.14/launch4j-3.14-win32.exe/download"
        $outputPath = ".\temp\launch4j-installer.exe"
        
        try {
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            
            # Using curl.exe for download (more reliable than Invoke-WebRequest)
            Write-Host "Starting download using curl..."
            curl.exe -L -o $outputPath $url
            
            if (!(Test-Path $outputPath)) {
                throw "Download failed - file not found"
            }
            
            $fileInfo = Get-Item $outputPath
            Write-Host "Download completed. File size: $($fileInfo.Length) bytes"
            
            # Create launch4j directory
            New-Item -ItemType Directory -Force -Path "launch4j" | Out-Null
            
            # Extract the self-extracting exe
            Write-Host "Extracting Launch4j..."
            Start-Process -FilePath $outputPath -ArgumentList "/SILENT", "/DIR=`"$PWD\launch4j`"" -Wait
            
            # Verify installation
            if (!(Test-Path ".\launch4j\launch4j.exe")) {
                throw "Installation failed - launch4j.exe not found"
            }
            
            Write-Host "Launch4j installed successfully"
            
            # Add to PATH
            $launch4jPath = "$PWD\launch4j"
            echo $launch4jPath | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
            Write-Host "Added to PATH: $launch4jPath"
            
        } catch {
            Write-Host "Error occurred: $_"
            Write-Host "Stack trace: $($_.ScriptStackTrace)"
            throw
        }

    - name: Verify Launch4j Installation
      shell: pwsh
      run: |
        $launch4jExe = Join-Path $PWD "launch4j\launch4j.exe"
        if (Test-Path $launch4jExe) {
            Write-Host "Launch4j found at: $launch4jExe"
            Write-Host "File details:"
            Get-Item $launch4jExe | Format-List *
        } else {
            throw "Launch4j executable not found at: $launch4jExe"
        }

    # Alternative direct ZIP download method
    - name: Alternative Download Method (if needed)
      if: failure()
      shell: pwsh
      run: |
        Write-Host "Attempting alternative download method..."
        $url = "https://master.dl.sourceforge.net/project/launch4j/launch4j-3/3.14/launch4j-3.14-win32.zip"
        $outputFile = "launch4j.zip"
        
        # Download using BitsTransfer
        Start-BitsTransfer -Source $url -Destination $outputFile
        
        if (Test-Path $outputFile) {
            Expand-Archive -Path $outputFile -DestinationPath "launch4j" -Force
        } else {
            throw "Alternative download failed"
        }

    - name: Create .exe with Launch4j
      shell: pwsh
      run: |
        $launch4jExe = Join-Path $PWD "launch4j\launch4j.exe"
        $configPath = Join-Path $PWD "launch4j-config.xml"
        
        if (!(Test-Path $configPath)) {
            throw "Configuration file not found at: $configPath"
        }
        
        Write-Host "Running Launch4j..."
        & $launch4jExe $configPath
        if ($LASTEXITCODE -ne 0) {
            throw "Launch4j failed with exit code: $LASTEXITCODE"
        }

    - name: Upload .exe as artifact
      uses: actions/upload-artifact@v3
      with:
        name: game-executable
        path: target/output.exe  # Adjust this path to match your actual output path
